<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
</head>
<main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">              
                <div class="row">
                    <div class="col-md-8">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {{#each cart}}
                                        <tr>
                                            <td class="image product-thumbnail"><img src="/images/products/{{productImage.[0]}}" alt="#"></td>
                                            <td>
                                                <h5><a href="#">{{this.productName}}</a></h5> <span class="product-qty">{{this.productPrice}}x {{this.quantity}}</span>
                                            </td>
                                            <td>₹{{multiply this.productPrice this.quantity }}
                                                <input  id= "productStock" value="{{this.productStock}}" hidden/>
                                                <input  id= "productQuantity" value="{{this.quantity}}" hidden/>

                                            </td>
                                            
                                        </tr>
                                        
                                        {{/each}}
                                        <tr>
                                        <th> Coupon <span id="copoun_code">
                                                <small></small>
                                            </span></th>
                                        <td colspan="2"><em><span id="discount_amt">
                                                    <span class="text-success">No Coupon</span>
                                                </span></em></td>
                                    </tr>
                                        <tr>
                                        <th>Total</th>
                                        <td class="product-subtotal" colspan="2">₹{{subTotal}}</td>
                                    </tr>
                                        <tr>
                                            <th>Shipping</th>
                                            <td colspan="2"><em>₹50</em></td>
                                        </tr>
                                        <tr>
                                            <th>Grand Total</th>
                                            {{!-- <td colspan="2" class="product-subtotal"><span class="font-xl text-brand fw-900">$280.00</span></td> --}}
                                            <td colspan="2" class="product-subtotal"><span id="new_sub_total"><span
                                                    class="font-xl text-brand fw-900" id="total">₹{{add subTotal
                                                    50}}</span></span></td>
                                                    <input type="hidden" name="subTotal" value="{{  subTotal  }}" id="subTotal">
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                             <div class="mb-30 mt-50">
                            <div class="heading_s1 mb-3">
                                <h4>Apply Coupon</h4>
                            </div>
                            <div class="total-amount">
                                <div class="left">
                                    <div class="coupon">
                                        <form action="#" target="_blank">
                                            <div class="form-row row justify-content-center">
                                                <div class="form-group col-lg-6">
                                                    <input class="font-medium" id="copon" name="coupon"
                                                        placeholder="Enter Your Coupon">
                                                </div>
                                                <div class="form-group col-lg-6">
                                                    <button id="couponBtn" onclick="toggleCoupon()" type="button"
                                                        class="btn btn-sm">
                                                        <i class="fi-rs-label mr-10"></i>Apply
                                                    </button>


                                                </div>
                                                <div class="text-center m-2" style="color: red;" id="couponMsg"> </div>
                                                <p class="text-center m-2" style="color: green;" id="sCoponMsg"> </p>

                                            </div>

                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">

                                <button type="button" class="btn btn-fill-out btn-block " data-bs-toggle="collapse" data-bs-target="#couponList" aria-expanded="false" aria-controls="couponList"> <i class="fi-rs-label mr-10"></i> Show Available Coupons</button>

                                <div class="panel-collapse1 collapse coupon_form " id="couponList">
                                    <div class="panel-body">
                                        {{!-- <div class="mb-25">
                                            <h4>Address Form</h4>
                                        </div> --}}
                                        {{#each coupon}}
                                        <article class="itemlist">
                                            <div class="row align-items-center">
                                                {{!-- <div class="col col-check flex-grow-0">
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" value="">
                                                    </div>
                                                </div> --}}

                                                <div
                                                    class="col-lg-2 col-sm-2 col-2 flex-grow-1 col-name text-align-center">
                                                    <a class="itemside">

                                                        <div class="info">
                                                            <h6 class="mb-2">{{this.code}}</h6>
                                                        </div>
                                                    </a>
                                                </div>
                                                <div
                                                    class="col-lg-2 col-sm-2 col-2 flex-grow-1 col-name text-align-center">
                                                    <a class="itemside">

                                                        <div class="info">
                                                            <h6 class="mb-0">{{this.discount}}%</h6>
                                                        </div>
                                                    </a>
                                                </div>
                                                {{!-- <div class="col-lg-2 col-sm-2 col-4 col-price">
                                                    <span>$76.99</span>
                                                </div> --}}






                                            </div> <!-- row .// -->
                                        </article>
                                        {{/each}}
                                    </div>
                                </div>
                            </div>
                        </div>
                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <div class="payment_method">
                                <div class="mb-25">
                                    <h5>Payment</h5>
                                </div>
                                <div class="payment_option">
                                    <div class="custome-radio">
                                        <input class="form-check-input" required="" type="radio" name="payment_option" id="cash-on-delivery" value="cash-on-delivery">
                                        <label class="form-check-label" for="cash-on-delivery" data-bs-toggle="collapse" data-target="#bankTranfer" aria-controls="bankTranfer">Cash On Delivery</label>
                                        </div>
                                        
                                    <div class="custome-radio">
                                    <input class="form-check-input" required="" type="radio" name="payment_option"
                                        value="razorpay" id="razorpay">
                                    <label class="form-check-label" for="razorpay" data-bs-toggle="collapse"
                                        data-target="#checkPayment" aria-controls="checkPayment"> Razor Pay</label>
                                </div>
                                <div class="custome-radio">
                                    <input class="form-check-input" required="" type="radio" name="payment_option"
                                        value="wallet" id="wallet" >
                                    <label class="form-check-label" for="wallet" data-bs-toggle="collapse"
                                        data-target="#paypal" aria-controls="paypal"> Wallet</label>
                                </div>
                                <div class="hotline d-none d-lg-block">

                                    <p class="my-2 mx-2">Wallet Balance : <strong><span id="update_wallet">
                                                ₹{{userData.wallet}}</span>
                                        </strong></p>

                                    <input type="hidden" value="{{userData.wallet}}" name="wallet">
                                </div>
                                    
                                </div>
                            </div>
                            <span id="order_button">
              <button onclick="placeOrder()" class="btn btn-fill-out btn-block mt-30">Place Order</button>
            </span>
                        </div>
                    </div>
                    <div class="col-md-4">
                    <div class="toggle_info">
                        <select id="selectedAddress" class="form-select form-select-lg p-3"
                            aria-label=".form-select-lg example">

                            {{#each addressData}}
                            <option value="{{this._id}}">{{this.city}}</option>
                            {{/each}}
                        </select>
                    </div>
                    <div class="toggle_info1">
                        <button type="button" class="btn btn-fill btn-block mt-20 col-md-12" data-bs-toggle="collapse"
                            data-bs-target="#coupon" aria-expanded="false" aria-controls="coupon"> <i
                                class="fi-rs-label mr-10"></i> Add new Address </button>
                    </div>
                    <div class="panel-collapse collapse coupon_form " id="coupon">
                        <div class="panel-body">
                            <div class="mb-25">
                                <h4>Address Form</h4>
                            </div>
                            <form action="/add_address" method="post">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="row gx-3">
                                            <div class="col-12 mb-3">
                                                <label class="form-label">Name</label>
                                                <input class="form-control" type="text" placeholder="Enter your name"
                                                    name="name" id="name">
                                                <p id="nameError" style="color: red;"></p>
                                            </div>
                                            <div class="col-lg-12 mb-3">
                                                <label class="form-label">Phone</label>
                                                <input class="form-control" type="tel"
                                                    placeholder="Enter your phone number" name="mobile" id="mobile">
                                                <p id="mobileError" style="color: red;"></p>
                                            </div>
                                            <div class="col-lg-12 mb-3">
                                                <label class="form-label">Address</label>
                                                <input class="form-control" type="text" placeholder="Enter your address"
                                                    name="address1" id="address1">
                                                <p id="address1Error" style="color: red;"></p>
                                            </div>
                                            <div class="col-lg-12 mb-3">
                                                <label class="form-label">City</label>
                                                <input class="form-control" type="text" placeholder="Enter your City"
                                                    name="city" id="city">
                                                <p id="cityError" style="color: red;"></p>
                                            </div>
                                            <div class="col-lg-12 mb-3">
                                                <label class="form-label">State</label>
                                                <input class="form-control" type="text" placeholder="Enter your State"
                                                    name="state" id="state">
                                                <p id="stateError" style="color: red;"></p>
                                                <div class="col-lg-12 mb-3">
                                                    <label class="form-label">Pincode</label>
                                                    <input class="form-control" type="tel"
                                                        placeholder="Enter your Pincode" name="pin" id="pincode">
                                                    <p id="pincodeError" style="color: red;"></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br>
                                    <button class="btn btn-primary mb-3" type="submit" id="submitButton">Save
                                        Address</button>
                                    <button type="button" class="btn btn-primary" data-bs-toggle="collapse"
                                        data-bs-target="#coupon">Close</button>
                            </form>

                        </div>
                    </div>


                </div>
                </div>
            </div>
        </section>
    </main>
   
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>

    let couponData
    let couponEl
    let newTotal
    let subTotal
    let updateWallet
    let ct=0


    // toggle coupon

    let couponStatus

    let originalSubTotal = Number(document.getElementsByName('subTotal')[0].value) ;

    const toggleCoupon = async () => {
        
        ct+=1
        couponEl = document.getElementById('copon').value.trim();
        const currentStatus = document.getElementById('couponBtn').innerText.trim();
        const endpoint = currentStatus === 'Apply' ? '/apply_coupon' : '/remove_coupon';

        const response = await fetch(endpoint, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ couponVal: couponEl, subTotal: originalSubTotal })
        });

         couponData = await response.json();

         console.log(couponData)

        const setCouponStatus = (msg, element) => {
            element.innerHTML = `<p>${msg}</p>`;
            setTimeout(() => {
                element.style.opacity = 1;
                element.innerHTML = '';
            }, 2000);
        };

        const couponMsg = document.getElementById('couponMsg');
        const sCoponMsg = document.getElementById('sCoponMsg');

        if (couponData.status === 'invalid') {
            ct=0
            setCouponStatus('Invalid coupon', couponMsg);
        } else if (couponData.status === 'expired') {
            ct=0
            setCouponStatus('Coupon has expired!', couponMsg);
        } else if (couponData.status === 'already_used') {
            ct=0
            setCouponStatus('Coupon already used!', couponMsg);
        } else if (couponData.status === 'not_used') {
            ct=0
            setCouponStatus('Coupon not used yet!', couponMsg);
        } else if (couponData.status === 'min_purchase_not_met') {
        ct = 0;
        setCouponStatus('Minimum purchase not met!', couponMsg);
        }else if (couponData.status === 'removed') {
            setCouponStatus('Coupon removed successfully', couponMsg);
            document.getElementById('couponBtn').innerHTML = '<i class="fi-rs-label mr-10"></i>Apply';
            document.getElementById('copon').value = '';
        } else if (couponData.status === 'applied') {
            setCouponStatus('Coupon applied successfully', sCoponMsg);
            document.getElementById('couponBtn').innerHTML = '<i class="fi-rs-label mr-10"></i>Remove';
        }
   

        if (couponData.status === 'applied' || couponData.status === 'removed') {
            document.getElementById('new_sub_total').innerHTML = `<strong>${parseInt(couponData.newTotal) + 50}</strong>`;
            document.getElementsByName('subTotal')[0].value = couponData.newTotal + 50;
            document.getElementById('copoun_code').innerHTML = `<small>${couponEl}</small>`;
            document.getElementById('discount_amt').innerHTML = `<span class="text-success">${couponData.discountAmt}</span>`;
        }
    };




    const paymentOption = document.querySelectorAll('input[name="payment_option"]');

    let paymentMethod = null;

    paymentOption.forEach((checkbox) => {
        checkbox.addEventListener('change', () => {
            if (checkbox.checked) {
                paymentMethod = checkbox.value
                console.log("User selected " + checkbox.value);
                console.log(paymentMethod, 'payment method..........')
            } else {
                console.log("User unchecked " + checkbox.value);
            }
        });
    });

    const placeOrder = () => {
        const productStock = parseInt(document.getElementById('productStock').value, 10); 
        const productQuantity = parseInt(document.getElementById('productQuantity').value, 10); 

    // Check if stock is zero
    if (productStock == 0) {
        // Show SweetAlert if out of stock
        Swal.fire({
            icon: 'error',
            title: 'Out of Stock',
            text: 'Sorry, this product is currently out of stock.',
        });

        return 
    }else if(productStock < productQuantity) {
         Swal.fire({
            icon: 'error',
            title: 'Not much available',
            text: 'Sorry, update quantity',
        });
        return
    }
        const selectedAddress = document.getElementById('selectedAddress').value;
        if (!selectedAddress) {
            Swal.fire('Error', 'Please select a delivery address.', 'error');
            return;
        }
        Swal.fire({
            title: 'Confirm Order',
            text: "Are you sure you want to place the order?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, place it!'
        }).then((result) => {
            if (result.isConfirmed) {
                subTotal = Number(document.getElementsByName('subTotal')[0].value);
                if (paymentMethod === 'cash-on-delivery') {
                    if (subTotal >= 1000) {
                        Swal.fire({
                            title: 'Error',
                            text: 'Cash on delivery is not available for orders above ₹1000',
                            icon: 'error',
                            showCancelButton: false,

                        })
                    } else {
                        Cod()
                    }
                } else if (paymentMethod === 'razorpay') {
                    online();
                } else if (paymentMethod === 'wallet') {
                    useWallet();
                } else {
                    console.log('Invalid payment method.');
                }
            }
        });
    }


    const useWallet = () => {
        const wallet = document.getElementsByName('wallet')[0].value
        let subTotal = Number(document.getElementsByName('subTotal')[0].value)
        console.log(wallet, 'walletttttttttttt', subTotal)
        const deliveryCharge = 50;

        if (couponData && couponData.status === 'applied') {
        subTotal = couponData.newTotal; // Updated subTotal after coupon
        }
        const totalAmount = subTotal + deliveryCharge;

        console.log(wallet, 'wallet balance');
        console.log(subTotal, 'discounted subTotal');
        console.log(totalAmount, 'totalAmount (subTotal + delivery charge)');

        if (wallet >= totalAmount) {
            updateWallet = wallet - totalAmount

            console.log(updateWallet, 'my name is update wallet...........')
            Cod()
        } else {
            alertify.set('notifier', 'position', 'bottom-center');
            //alertify.success('you dont have sufficient balance in ur wallet choose another payment method')
            Swal.fire({
                icon: 'error',
                title: 'Insufficient Balance',
                text: 'You don’t have sufficient balance in your wallet. Please choose another payment method.',
                confirmButtonText: 'OK'
            });
        }
    }


    let paymentStatus = true;


    const Cod = async () => {
        try{
            const selectAddress = document.querySelector('#selectedAddress').value
            const subTotal = Number(document.getElementsByName('subTotal')[0].value) 

            let requestBody = {

                selectedAddress: selectAddress,
                selectedPayment: paymentMethod,
                amount: subTotal,
                couponData: couponData,
                couponName: couponEl,
                updateWallet: updateWallet
            }
            console.log('req.body--------------------->', requestBody)
            
            if (!paymentStatus) {
                console.log('payment status failed   =>        ')
            requestBody.status = "Payment Failed";
            }
                
            const datas = await fetch('/placeorder', {
            method: 'POST',
            headers: {
                'Content-Type': "application/json",
            },
            body: JSON.stringify(requestBody)            
            })

            const placeOrderData = await datas.json()        
            console.log('response json_______________', placeOrderData)
            if (placeOrderData) {
            console.log('Received placeOrderData:', placeOrderData);
            if (paymentStatus) {            
            window.location.href = '/orderPlaced'
            }
            else {
                // Show an alert and redirect to the payment_failed route
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'Your payment could not be processed. Please try again later or use a different payment method.',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/payment_failed';
                    }
                });
            }
            }
        } catch (error) {
        console.error('Error placing order:', error);
        // Optionally handle the error, e.g., show a notification to the user
        }
    };


    const online = () => {
        if(ct===0) {
            subTotal = Number(document.getElementsByName('subTotal')[0].value) + 50
        }else{
            subTotal = Number(document.getElementsByName('subTotal')[0].value) 
        }
        
        var options = {
            "key": "rzp_test_RgbHBDrROekluj", // Enter the Key ID generated from the Dashboard
            "amount": (subTotal)* 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "image": "/images/products/1718596347650_Batter Bazaar.png",

            "name": "Cake Shop", //your business name
            /*"description": "Test Transaction",
            "image": "https://example.com/your_logo",*/

            "order_id":  undefined, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
            "handler": function (response) {
                //console.log(response.razorpayOrder, status);
              //  verifyPayment(response.razorpayOrder, status, response.razorpayOrder.id, response.orderId);
                Cod()
            },

        };
        var rzp1 = new Razorpay(options);
        //rzp1.open();
        // Handle errors
        rzp1.on('payment.failed', function (response) {
            console.log('payment failed....................................=>')
            paymentStatus = false;
            Cod()
            Swal.fire({
                icon: 'error',
                title: 'Payment Failed',
                text: 'Your payment could not be processed. Please try again later or use a different payment method.',
                confirmButtonText: 'OK'
                }).then((result) => {
                if (result.isConfirmed) {
                window.location.href = '/payment_failed';
                }
            });

        })

        rzp1.open();
    }
    
    

const validateCoupon = async () => {
    couponEl = document.getElementById('copon').value;
    subTotal = Number(document.getElementsByName('subTotal')[0].value);

    console.log(couponEl);
    console.log('heloooo from validate coupon...............');
    const response = await fetch('/validate_coupon', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            couponVal: couponEl,
            subTotal: subTotal
        })
    });

    console.log('hiiiii from coupon status........;;;;;;');
    couponData = await response.json();
    console.log(couponData);

    
};

function verifyPayment(response, order) {

    $.ajax({
        url: '/verify-payment',
        method: 'post',
        data: {
            order,
            response,
            from: "wallet"
        },success: (response) => {
            if (response) {
                Swal.fire({
                    title: "Success",
                    text: "Payment has been succeed",
                    icon: "success",
                }).then(function () {
                        location.reload()
                    });
            } else {
                Swal.fire("PAYMENT ERROR!", "Something wrong occured while processing the payment.", "error");
                location.reload()
                }

        }
    })
}

 //document.getElementById('couponBtn').addEventListener('click', toggleCoupon);
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form[action="/add_address"]');
        const submitButton = document.getElementById('submitButton');
        const nameField = document.getElementById('name');
        const mobileField = document.getElementById('mobile');
        const address1Field = document.getElementById('address1');
        const address2Field = document.getElementById('address2');
        const cityField = document.getElementById('city');
        const stateField = document.getElementById('state');
        const pincodeField = document.getElementById('pincode');
        const nameError = document.getElementById('nameError');
        const mobileError = document.getElementById('mobileError');
        const address1Error = document.getElementById('address1Error');
        const cityError = document.getElementById('cityError');
        const stateError = document.getElementById('stateError');
        const pincodeError = document.getElementById('pincodeError');

        form.addEventListener('submit', function (event) {
            let isValid = true;


            clearErrors();

            if (nameField.value.trim() === '') {
                isValid = false;
                showError(nameError, 'Name is required.');
            }

            if (mobileField.value.trim() === '') {
                isValid = false;
                showError(mobileError, 'Phone number is required.');
            } else if (!/^\d{10}$/.test(mobileField.value.trim())) {
                isValid = false;
                showError(mobileError, 'Phone number must be 10 digits.');
            }

            if (address1Field.value.trim() === '') {
                isValid = false;
                showError(address1Error, 'Address line 1 is required.');
            }

            if (cityField.value.trim() === '') {
                isValid = false;
                showError(cityError, 'City is required.');
            }

            if (stateField.value.trim() === '') {
                isValid = false;
                showError(stateError, 'State is required.');
            }

            if (pincodeField.value.trim() === '') {
                isValid = false;
                showError(pincodeError, 'Pincode is required.');
            } else if (!/^\d{6}$/.test(pincodeField.value.trim())) {
                isValid = false;
                showError(pincodeError, 'Pincode must be 6 digits.');
            }

            if (!isValid) {
                event.preventDefault();
            }
        });

        function showError(element, message) {
            element.innerText = message;
            element.style.color = 'red';
        }

        function clearErrors() {
            nameError.innerText = '';
            mobileError.innerText = '';
            address1Error.innerText = '';
            cityError.innerText = '';
            stateError.innerText = '';
            pincodeError.innerText = '';
        }
    });
</script>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    