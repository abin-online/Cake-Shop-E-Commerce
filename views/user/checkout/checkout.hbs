<main class="main">
  <div class="page-header breadcrumb-wrap">
    <div class="container">
      <div class="breadcrumb">
        <a href="index.html" rel="nofollow">Home</a>
        <span></span> Shop
        <span></span> Checkout
      </div>
    </div>
  </div>
  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row">
        <div class="col-md-6">
          <div class="order_review">
            <div class="mb-20">
              <h4>Your Orders</h4>
            </div>
            <div class="table-responsive order_table text-center">
              <table class="table">
                <thead>
                  <tr>
                    <th colspan="2">Product</th>
                    <th>Total</th>
                  </tr>
                </thead>
                <tbody>
                  {{#each cart}}
                  <tr>
                    <td class="image product-thumbnail"><img src="/images/products/{{this.product.imageUrl.[0]}}"
                        alt="#"></td>
                    <td>
                      <h5><a href="shop-product-full.html">{{this.product.name}}</a></h5> <span class="product-qty">x
                        {{this.quantity }}</span>
                    </td>
                    <td>{{this.product.price }}</td>
                  </tr>
                  {{/each}}

                  <tr>
                    <th> Coupon <span id="copoun_code">
                        <small></small>
                      </span></th>
                    <td colspan="2"><em> <span id="discount_amt">
                          <span class="text-success"></span>
                        </span></em></td>
                  </tr>
                  <tr>
                    <th>Shipping</th>
                    <td colspan="2"><em>+50</em></td>
                  </tr>
                  <tr>
                    <th>Total</th>

                    <td colspan="2" class="product-subtotal"><span id="new_sub_total"><span
                          class="font-xl text-brand fw-900" id="total">{{add subTotal 50}}</span></span>

                    </td>
                    <input type="hidden" name="subTotal" value="{{add subTotal 50}}" id="subTotal">
                  </tr>
                </tbody>
              </table>
            </div>
            <div class="mb-30 mt-50">
              <div class="heading_s1 mb-3">
                <h4>Apply Coupon</h4>
              </div>
              <div class="total-amount">
                <div class="left">
                  <div class="coupon">
                    <form action="#" target="_blank">
                      <div class="form-row row justify-content-center">
    <div class="form-group col-lg-6">
        <select id="copon" name="coupon" class="form-control font-medium">
            {{#each availableCoupons}}
                <option value="{{this.code}}">{{this.code}}</option>
            {{/each}}
        </select>
    </div>
    <div class="form-group col-lg-6">
        <button id="couponBtn" onclick="toggleCoupon()" type="button" class="btn btn-sm" style="width: 120px;">
            <i class="fi-rs-label mr-10"></i>Apply
        </button>
    </div>
    <div class="text-center m-2" style="color: red;" id="couponMsg"></div>
    <p class="text-center m-2" style="color: green;" id="sCoponMsg"></p>
</div>


                    </form>
                  </div>
                </div>
              </div>
            </div>
            <div class="bt-1 border-color-1 mt-30 mb-30"></div>

            <div class="payment_method">
              <div class="mb-25">
                <h5>Payment</h5>
              </div>
              <div class="payment_option">
                <div class="custome-radio">
                  <input class="form-check-input" required="" type="radio" name="payment_option" id="cash-on-delivery"
                     value="cash-on-delivery">
                  <label class="form-check-label" for="cash-on-delivery" data-bs-toggle="collapse"
                    data-target="#bankTranfer" aria-controls="bankTranfer">Cash On Delivery</label>
                </div>
                <div class="custome-radio">
                  <input class="form-check-input" required="" type="radio" name="payment_option" value="razorpay"
                    id="razorpay" >
                  <label class="form-check-label" for="razorpay" data-bs-toggle="collapse" data-target="#checkPayment"
                    aria-controls="checkPayment"> Razor Pay</label>
                </div>
                <div class="custome-radio">
                  <input class="form-check-input" required="" type="radio" name="payment_option" value="wallet"
                    id="wallet" >
                  <label class="form-check-label" for="wallet" data-bs-toggle="collapse" data-target="#paypal"
                    aria-controls="paypal"> Wallet</label>
                </div>
                <div class="hotline d-none d-lg-block">

                  <p class="my-2 mx-2">Available Balance : <strong><span id="update_wallet"> ₹{{userData.wallet}}</span>
                    </strong></p>

                  <input type="hidden" value="{{userData.wallet}}" name="wallet">
                </div>
              </div>
            </div>
            <span id="order_button">
              <button onclick="placeOrder()" class="btn btn-fill-out btn-block mt-30">Place Order</button>
            </span>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="toggle_info">
            <select id="selectedAddress" class="form-select form-select-lg mb-3 p-3"
              aria-label=".form-select-lg example">
              {{!-- <option selected>Select an address</option> --}}
              {{#each addressData}}
              <option value="{{this._id}}">{{this.adressLine1}}</option>
              {{/each}}
            </select>
          </div>
          <br>
          <div class="toggle_info">
            <button type="button" class="btn btn-fill-out btn-block mt-30" data-bs-toggle="collapse"
              data-bs-target="#coupon" aria-expanded="false" aria-controls="coupon"> <i class="fi-rs-label mr-10"></i>
              Add new Address </button>
          </div>
          <div class="panel-collapse collapse coupon_form " id="coupon">
            <div class="panel-body">
              <div class="mb-25">
                <h4>Address Form</h4>
              </div>
<form method="post" action="/add_new_adress" onsubmit="return Validation()">
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="row gx-3">
                                                                    <div class="col-12 mb-3">
                        <label class="form-label">Name</label>
                        <input class="form-control" type="text" placeholder="Enter your name"  name="name"  id="name"  >
                        <div class="error" style="color: red;" id="nameError"></div>
                    </div>
                                        <div class="col-lg-12 mb-3">
                        <label class="form-label">Phone</label>
                        <input class="form-control" type="tel" placeholder="Enter your phone number"  name="mobile"  id="mobile" >
                        <div class="error" style="color: red;" id="mobileError"></div>
                    </div>
                    <div class="col-lg-12 mb-3">
                        <label class="form-label">Address line 1</label>
                        <input class="form-control" type="text" placeholder="Enter your address"  name="address1" id="address1"  >
                        <div class="error" style="color: red;" id="address1Error"></div>
                    </div>
                    <div class="col-lg-12 mb-3">
                        <label class="form-label">Address line 2</label>
                        <input class="form-control" type="text" placeholder="Enter your address" name="address2" id="address2" >
                        <div class="error" style="color: red;" id="address2Error"></div>
                    </div>
                                        <div class="col-lg-12 mb-3">
                        <label class="form-label">City</label>
                        <input class="form-control" type="text" placeholder="Enter your City" name="city" id="city" >
                        <div class="error" style="color: red;" id="cityError"></div>
                    </div>
                                        <div class="col-lg-12 mb-3">
                        <label class="form-label">State</label>
                        <input class="form-control" type="text" placeholder="Enter your State"  name="state" id="state" >
                        <div class="error" style="color: red;" id="stateError"></div>
                    </div>
                                        <div class="col-lg-12 mb-3">
                        <label class="form-label">Pincode</label>
                        <input class="form-control" type="tel" placeholder="Enter your Pincode"  name="pin" id="pin"  >
                        <div class="error" style="color: red;" id="pinError"></div>
                    </div>
                                                
                                            </div> 




                                    </div> <!-- row.// -->
                                    <br>
                                    <button class="btn btn-primary" type="submit" >Save Address</button>
                                </form>
            </div>
          </div>
        </div>
      </div>


    </div>
  </section>
</main>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css"/>
<script src="//cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>

<script>

  let couponData
  let couponEl
  let newTotal
  let subTotal
  let updateWallet

//toggle coupon

let couponStatus

let originalSubTotal = Number(document.getElementsByName('subTotal')[0].value); // Store the original subtotal

const toggleCoupon = async () => {
    const couponEl = document.getElementById('copon').value;
    const currentStatus = document.getElementById('couponBtn').innerText.trim();
    const endpoint = currentStatus === 'Apply' ? '/apply_coupon' : '/remove_coupon';

    const response = await fetch(endpoint, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ couponVal: couponEl, subTotal: originalSubTotal })
    });

    couponData = await response.json();
    console.log(couponData)

    const setCouponStatus = (msg, element) => {
        element.innerHTML = `<p>${msg}</p>`;
        setTimeout(() => {
            element.style.opacity = 0;
            element.innerHTML = '';
        }, 2000);
    };

    const couponMsg = document.getElementById('couponMsg');
    const sCoponMsg = document.getElementById('sCoponMsg');

    if (couponData.status === 'invalid') {
        setCouponStatus('Invalid coupon', couponMsg);
    } else if (couponData.status === 'expired') {
        setCouponStatus('Coupon has expired!', couponMsg);
    } else if (couponData.status === 'already_used') {
        setCouponStatus('Coupon already used!', couponMsg);
    } else if (couponData.status === 'not_used') {
        setCouponStatus('Coupon not used yet!', couponMsg);
    } else if (couponData.status === 'removed') {
        setCouponStatus('Coupon removed successfully', couponMsg);
        document.getElementById('couponBtn').innerHTML = '<i class="fi-rs-label mr-10"></i>Apply';
    } else if (couponData.status === 'applied') {
        setCouponStatus('Coupon applied successfully', sCoponMsg);
        document.getElementById('couponBtn').innerHTML = '<i class="fi-rs-label mr-10"></i>Remove';
    }

    if (couponData.status === 'applied' || couponData.status === 'removed') {
        document.getElementById('new_sub_total').innerHTML = `<strong>${couponData.newTotal}</strong>`;
        document.getElementsByName('subTotal')[0].value = couponData.newTotal;
        document.getElementById('copoun_code').innerHTML = `<small>${couponEl}</small>`;
        document.getElementById('discount_amt').innerHTML = `<span class="text-success">${couponData.discountAmt}</span>`;
    }
};


  /*
   const cashOnDelivery = document.getElementById('cash-on-delivery');
    const razorpay = document.getElementById('razorpay');
  
    cashOnDelivery.addEventListener('change', handleCheckboxChange);
    razorpay.addEventListener('change', handleCheckboxChange); */

  const paymentOption = document.querySelectorAll('input[name="payment_option"]');

  let paymentMethod = null;

  paymentOption.forEach((checkbox) => {
    checkbox.addEventListener('change', () => {
      if (checkbox.checked) {
        paymentMethod = checkbox.value
        console.log("User selected " + checkbox.value);
        console.log(paymentMethod, 'payment method..........')
      } else {
        console.log("User unchecked " + checkbox.value);
      }
    });
  });



  /* function handleCheckboxChange() {
    cashOnDelivery.checked ? paymentMethod = 'cash-on-delivery' : paymentMethod = 'razorpay'
      console.log(paymentMethod)
  } */



  /* const placeOrder = () => {
     paymentMethod == 'cash-on-delivery' ? Cod() : online()
   }*/

  const placeOrder = () => {
    if (paymentMethod === 'cash-on-delivery') {
      subTotal = Number(document.getElementsByName('subTotal')[0].value)

      if (subTotal > 1000) {
        Swal.fire({
          title: 'Error!',
          text: 'Cash on Delivery is not available for orders above Rs.1000!!!',
          icon: 'error',

        })
      }else{
        Cod()
      }
    } else if (paymentMethod === 'razorpay') {
      online()
    } else if (paymentMethod === 'wallet') {
      useWallet()
    } else {
      console.log('Invalid payment method.')
    }
  }


  const useWallet = () => {
    const wallet = document.getElementsByName('wallet')[0].value
    const subTotal = Number(document.getElementsByName('subTotal')[0].value)
    console.log(wallet, 'walletttttttttttt', subTotal)

    if (wallet > subTotal) {
      updateWallet = wallet - subTotal

      console.log(updateWallet, 'my name is update wallet...........')
      Cod()
    } else {
      alertify.set('notifier', 'position', 'bottom-center');
      //alertify.success('you dont have sufficient balance in ur wallet choose another payment method')
      Swal.fire({
                icon: 'error',
                title: 'Insufficient Balance',
                text: 'You don’t have sufficient balance in your wallet. Please choose another payment method.',
                confirmButtonText: 'OK'
            });
    }
  }


let paymentStatus = true;

const Cod = async () => {
    try {
        const selectAddress = document.querySelector('#selectedAddress').value;
        const subTotal = Number(document.getElementsByName('subTotal')[0].value);

       if (!selectAddress) {
    alertify.alert('Warning', 'Please select an address.');
}

        // Prepare the request body based on the payment status
        let requestBody = {
            selectedAddress: selectAddress,
            selectedPayment: paymentMethod,
            amount: subTotal,
            couponData: couponData,
            couponName: couponEl,
            updateWallet: updateWallet
        };

        // Check payment status and modify the request body accordingly
        if (!paymentStatus) {
            requestBody.status = "Payment Failed";
        }

        // Make the fetch call
        const response = await fetch('/place_order', {
            method: 'POST',
            headers: {
                'Content-Type': "application/json",
            },
            body: JSON.stringify(requestBody)
        });

        const placeOrderData = await response.json();

        if (placeOrderData) {
            console.log('Received placeOrderData:', placeOrderData);
            if (paymentStatus) {
                window.location.href = '/order_sucess';
            } else {
                // Show an alert and redirect to the payment_failed route
                Swal.fire({
                    icon: 'error',
                    title: 'Payment Failed',
                    text: 'Your payment could not be processed. Please try again later or use a different payment method.',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/payment_failed';
                    }
                });
            }
        }
    } catch (error) {
        console.error('Error placing order:', error);
        // Optionally handle the error, e.g., show a notification to the user
    }
};

  const online = () => {
    subTotal = Number(document.getElementsByName('subTotal')[0].value)


    var options = {
      "key": "rzp_test_RgbHBDrROekluj", // Enter the Key ID generated from the Dashboard
      "amount": subTotal * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
      "currency": "INR",

      "name" : "Cake Shop",
      /*"name": "Acme Corp", //your business name
      "description": "Test Transaction",
      "image": "https://example.com/your_logo",*/

      "order_id": undefined, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
      "handler": function (response) {
        Cod()
      },

    };
    var rzp1 = new Razorpay(options);
    rzp1.on('payment.failed',function(response){
    paymentStatus = false;
    Cod()
     Swal.fire({
    icon: 'error',
    title: 'Payment Failed',
    text: 'Your payment could not be processed. Please try again later or use a different payment method.',
    confirmButtonText: 'OK'
}).then((result) => {
    if (result.isConfirmed) {
        window.location.href = '/payment_failed';
    }
});

    })
    rzp1.open();

  }







</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>



  function Validation() {
    let errors = []
    var username = document.getElementById('name').value;
    var phoneNumber = document.getElementById('mobile').value;
    var address = document.getElementById('address1').value.trim();
    var city = document.getElementById('city').value.trim();
    var state = document.getElementById('state').value.trim();
    var pin = document.getElementById('pin').value.trim();





    var nameerror = document.getElementById('nameError')
    var phoneerror = document.getElementById('mobileError')
    var address1error = document.getElementById('address1Error')
    var cityerror = document.getElementById('cityError')
    var stateerror = document.getElementById('stateError')
    var pinerror = document.getElementById('pinError')






    var userPattern = /^[a-zA-Z\s]{3,}$/;
    var phonePattern = /^\d{10}$/;
    var cityPattern = /^[a-zA-Z\s]{3,}$/;
    var statePattern = /^[a-zA-Z\s]{3,}$/;








    if (!username.match(userPattern)) {
      errors.push("Name is required")
    }
    if (!phoneNumber.match(phonePattern)) {
      errors.push("Mobile no is required")
    }
    if (address.length < 3) {
      errors.push("Address is required")
    }
    if (!city.match(cityPattern)) {
      errors.push("City is required")
    }
    if (!state.match(statePattern)) {
      errors.push("State is required")
    }
    if (pin.length !== 6) {
      errors.push("Pin is required")
    }



    // Display all error messages
    if (errors.length > 0) {
      nameError.innerHTML = errors.includes("Name is required") ? "Name is required" : "";
      mobileError.innerHTML = errors.includes("Mobile no is required") ? "Mobile no is required" : "";
      address1Error.innerHTML = errors.includes("Address is required") ? "Address is required" : "";
      cityError.innerHTML = errors.includes("City is required") ? "City is required" : "";
      stateError.innerHTML = errors.includes("State is required") ? "State is required" : "";
      pinError.innerHTML = errors.includes("Pin is required") ? "Pin is required" : "";

      return false; // Prevent form submission
    }

    return true; // Allow form submission if no errors
  }







</script>

<style>
    /* Increase the height of the options */
    #selectedAddress option {
      padding: 10px; /* Adjust the padding as needed */
      font-size: 18px; /* Adjust the font size as needed */
      line-height: 1.5; /* Adjust the line height as needed */
    }
  </style>