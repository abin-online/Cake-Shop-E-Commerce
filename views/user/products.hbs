<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Shop
            </div>
        </div>
    </div>
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row flex-row-reverse">
                <div class="col-lg-9">
                    <div class="shop-product-fillter">
                        <div id="totall-product">
                            <p> We found <strong id="count" class="text-brand">0</strong> items for you!</p>
                        </div>
                        <div class="sort-by-product-area">
                            <div class="sort-by-cover mr-10">
                                <div class="sort-by-product-wrap">
                                    <div class="sort-by">
                                        <span><i class="fi-rs-apps"></i>Show</span>
                                    </div>
                                    <div class="sort-by-dropdown-wrap">
                                        <span> <i class="fi-rs-angle-small-down"></i></span>
                                    </div>
                                </div>
                                <div class="sort-by-dropdown">
                                    <ul>
                                        <li><a onclick="limits(1)">1</a></li>
                                        <li><a onclick="limits(3)">3</a></li>
                                        <li><a onclick="limits(6)">6</a></li>
                                        <li><a onclick="limits(9)">9</a></li>
                                    </ul>
                                </div>
                            </div>

                        </div>
                    </div>
<span id="pro_container">
    <div class="row product-grid-3" id="productList">
       
            
{{#each iterator}}
    <div class="col-lg-4 col-md-4 col-12 col-sm-6">
        <div style="background-color: #e2e8f0; width: 260px; height: 320px; border-radius: 2rem; gap: 8px; margin-bottom: 20px;"></div>
    </div>
{{/each}}

        
    </div>
</span>

                    <!--pagination-->

                    <div class="pagination-area mt-15 mb-sm-5 mb-lg-0">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination justify-content-start" id="paginationList">
                                {{#each pages}}
                                <li class="page-item {{#ifEquals this ../currentPage}}active{{/ifEquals}}">
                                    <!-- Pass the sort parameter to the currentFunction -->
                                    <a class="page-link"
                                        href="javascript:{{../currentFunction}}('{{../catId}}', {{this}}, '{{../currentSort}}');">{{this}}</a>
                                </li>
                                {{/each}}
                            </ul>
                        </nav>
                    </div>

                </div>
                <div class="col-lg-3 primary-sidebar sticky-sidebar">
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Category</h5>
                        <ul class="categories">
                            {{#each loadCatData}}
                            <li>
                               
                                <a onclick="filterByCategory('{{this._id}}')">{{this.category}}</a>
                            </li>
                            {{/each}}

                            
                        </ul>
                    </div>
                    <!-- Fillter By Price -->
                    <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Sort</h5>
                        <ul>
                            <li><a onclick="sortLowToHigh()">Price: Low to High</a></li>
                            <li><a onclick="sortHighToLow()">Price: High to Low</a></li>
                            <li><a onclick="sortAZ()">A - Z</a></li>
                            <li><a onclick="sortZA()">Z - A</a></li>
                            <li><a onclick="newArrivals()">New Arrivals</a></li>
                            <li><a onclick="popularity()">Popularity</a></li>



                        </ul>
                    </div>

                    {{!-- <div class="widget-category mb-30">
                        <h5 class="section-title style-1 mb-30 wow fadeIn animated">Internal Storage</h5>
                        <ul>
                            <li><a onclick="sortLowToHigh()">256 GB & Above</a></li>
                            <li><a onclick="sortHighToLow()">128-255.9 GB</a></li>                           
                        </ul>
                    </div> --}}
                    <!-- Clear filter -->

                    
                    <button onclick="clearfilter()" class="btn btn-fill-out btn-block hover-up mb-30" name="login">Clear
                        filter</button>


                    
                    
                </div>
            </div>
        </div>
    </section>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="/javascripts/products.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let currentPage = 1;
    let currentSort = '';
    let currentCategory = '';
    let searchQuery = '';
    let limit = 6;

    const fetchProducts = () => {
        $.ajax({
            url: '/search',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                searchQuery,
                sortOption: currentSort,
                categoryFilter: currentCategory,
                page: currentPage,
                limit,
            }),
            success: (data) => {
                console.log(data)


                updateProductList(data.products);
                updatePagination(data.totalProducts);
                updateProductCount(data.totalProducts);
            },
            error: (error) => {
                console.error('Error fetching products:', error);
            },
        });
    };

    const updateProductList = (products) => {
        const productList = $('#productList');
        productList.empty();

        if (products.length === 0) {
            productList.html('<h2 class="m-5">No product available</h2>');
            return;
        }

        //count.innerHTML=products.length
        //  totall-product.html('<h2 class="m-5">No product available</h2>');


        products.forEach((product) => {
const productHtml = `
    <div class="col-lg-4 col-md-4 col-12 col-sm-6">
        <div class="product-cart-wrap mb-30">
            <div class="product-img-action-wrap">
                <div class="product-img product-img-zoom">
                    <a href="/productview?id=${product._id}">
                        <img class="default-img" src="/images/products/${product.imageUrl[0]}" alt="">
                        <img class="hover-img" src="/images/products/${product.imageUrl[1]}" alt="">
                    </a>
                </div>
                <div class="product-action-1">
                    <a aria-label="Quick view" class="action-btn hover-up"
                       href="/productview?id=${product._id}" data-bs-target="#quickViewModal">
                        <i class="fi-rs-search"></i></a>
                    <a data-id="${product._id}" aria-label="Add To Wishlist"
                                            class="wish action-btn hover-up" href="#"><i
                                                class="fi-rs-heart"></i></a>
                    
                </div>
                <div class="product-badges product-badges-position product-badges-mrg">
                    <span class="hot">Hot</span>
                </div>
            </div>
            <div class="product-content-wrap">
                <div class="product-category">
                    <a href="#">${product.category.category}</a>
                </div>
                <h2><a href="/productview?id=${product._id}">${product.name}</a></h2>
                <div class="rating-result" title="90%">
                    <span><span>90%</span></span>
                </div>
                <div class="product-price">
                    ${
                        product.discountPrice && product.discountPrice < product.price
                            ? `<span>₹${product.discountPrice}</span>
                               <span class="old-price">₹${product.price}</span>` // Show both if discount exists
                            : `<span>₹${product.price}</span>` // Show only price if no discount
                    }
                </div>
                <div class="product-action-1 show">
                    <span>
                        <a data-id="${product._id}" aria-label="Add To Wishlist"
                            class="wish action-btn hover-up" href="#"><i
                                class="fi-rs-heart"></i></a>
                    </span>
                </div>
            </div>
        </div>
    </div>
`;

// Append to product list
productList.append(productHtml);

        });
    };
    // count.innerHTML=totalProducts


    $(document).ready(function () {
    const userId = ""; 

    $('#productList').on('click', '.wish.action-btn', function (event) {
        event.preventDefault();
        var $button = $(this);
        var id = $button.data('id');

        $.ajax({
            type: 'POST',
            url: '/addtowishlist',
            contentType: 'application/json',
            data: JSON.stringify({ id: id, userId: userId }),
            success: function (productDdata) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Product Successfully added to Wishlist!!!',
                    icon: 'success',
                    confirmButtonText: 'Cool'
                })//.then(() => window.location.reload());
            },
            error: function (xhr, status, error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to add product to Wishlist!!!',
                    icon: 'error',
                    confirmButtonText: 'Cool'
                });
                console.error(error);
            }
        });
    });
});



    const updatePagination = (totalProducts) => {
        const paginationList = $('#paginationList');
        paginationList.empty();
        const totalPages = Math.ceil(totalProducts / limit);

        for (let i = 1; i <= totalPages; i++) {
            const activeClass = i === currentPage ? 'active' : '';
            const pageItem = `<li class="page-item ${activeClass}">
            <a class="page-link" href="javascript:goToPage(${i});">${i}</a>
        </li>`;
            paginationList.append(pageItem);
        }
    };
    const updateProductCount = (totalProducts) => {
        $('#count').text(totalProducts);
    };
    const goToPage = (page) => {
        currentPage = page;
        fetchProducts();
    };

    const searchProducts = () => {
        searchQuery = $('#searchInput').val();
        //currentPage = 1;
        fetchProducts();
    };

    const sortLowToHigh = () => {
        currentSort = 'priceAsc';
       // currentPage = 1;
        fetchProducts();
    };

    const sortHighToLow = () => {
        currentSort = 'priceDesc';
       // currentPage = 1;
        fetchProducts();
    };

    const sortAZ = () => {
        currentSort = 'nameAsc';
       // currentPage = 1;
        fetchProducts();
    };

    const sortZA = () => {
        currentSort = 'nameDesc';
      //  currentPage = 1;
        fetchProducts();
    };

    const newArrivals = () => {
        currentSort = 'newArrivals';
        //currentPage = 1;
        fetchProducts();
    };

    const popularity = () => {
        currentSort = 'popularity';
        //currentPage = 1;
        fetchProducts();
    };

    const filterByCategory = (categoryId) => {
        currentCategory = categoryId;
       // currentPage = 1;
        fetchProducts();
    };
    const limits = (ct) => {
        limit = ct;
        currentPage = 1;

        fetchProducts();
    }
    const clearfilter = () => {
        currentPage = 1;
        currentSort = '';
        currentCategory = '';
        searchQuery = '';
        limit = 6;
        fetchProducts()
    }


    
    fetchProducts();
</script>