
<main class="main-wrap">

    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                 
                </div>
            </div>
            <div class="col-lg-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Basic</h4>
                    </div>
                    <div class="card-body">
<form onSubmit = "return Validation()" method="post" class="form-add-product" action="/admin/update_product/{{proData._id}}" onsubmit="return Validation()" enctype="multipart/form-data">
                            
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" value="{{proData.name}}" placeholder="Type here" name="name"
                                    class="form-control" id="productName"   >
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="productNameAlert"></h6>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                {{!-- <textarea placeholder="Type here" name="description" id="longdescription"
                                    class="form-control" rows="4 " value="{{product.description}}"></textarea> --}}
                                <input class="form-control" id="longdescription" 
                                    name="description" rows="3"
                                    value="{{proData.description}}" ></input>
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="longAlert"></h6>

                                    
                            </div>
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="mb-4">
                                        <label class="form-label">Price</label>
                                        <div class="row gx-2">
                                            <input placeholder="$" type="text" value="{{proData.price}}" id="price"
                                                name="price" class="form-control">
                                        </div>
                                         <h6 class="alertAddProduct mt-1" style="color: red" id="priceAlert"></h6>

                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-4">
                                        <label class="form-label">Stock</label>
                                        <input name="stock" value="{{proData.stock}}" class="form-control"
                                            placeholder="Quantity" type="text" id="Qty">
                                    </div>
                                    <h6 class="alertAddProduct mt-1" style="color: red" id="qtyAlert"></h6>
                                </div>
                                <div class="col-lg-3">
                                    <label class="form-label">Category:</label>
                                    <select name="category" id="category" class="form-select">
                                        {{#each catogories}}
                                        <option value="{{this._id}}">{{this.category}}</option>
                                        {{/each}}
                                    </select>
                                </div>
                                <div class="col-lg-3">
                                    <label class="form-label">Brands:</label>
                                    <select name="brand" id="category" class="form-select">
                                        {{#each brandData}}
                                        <option value="{{this._id}}">{{this.brand}}</option>
                                        {{/each}}
                                    </select>
                                </div>


                          

                            </div>
                            <div class="form-group">
        <label for="productImage">Product Image:</label>
        <div class="d-flex border p-10 m-tb-10">
          <input name="product-id" type="hidden" value="{{proData._id}}">
         {{#each proData.imageUrl}}
  <div class="image-container">
    <div class="badge rounded-pill alert-danger">
<p title="Delete image ?" class="close-button" title="Delete image?" data-image-index="{{@index}}" style="text-decoration: none; cursor: pointer;">Ã—</p>
    </div>
    <img src="/images/products/{{this}}" alt="images" style="width: 80px; height: auto;" class="m-2 pro-image" data-image-index="{{@index}}">
  </div>
{{/each}}
<div id="new-image-preview" class="d-flex flex-wrap"></div>

        </div>
<input type="file" class="form-control-file" id="productImage" multiple name="image">

      </div> <h6 id="imgAlert" class=" mt-2" style="color: red;"></h6>



                            <div class="d-flex g-2">
                                <div class="m-2">
                                    <button type="submit" class="btn btn-primary">Edit Product</button>

                                </div>
                                <div class="m-2">
                                    <a href="/admin/product" type="button" class="btn btn-primary" id="backbutton">Back</a>

                                </div>


                            </div>
                   
                        </form>
                    </div>
                </div> <!-- card end// -->



            </div>
    </section> <!-- content-main end// -->
    <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
            <div class="col-sm-6">
                <script>
                    document.write(new Date().getFullYear())
                </script> Â©, Evara - HTML Ecommerce Template .
            </div>
            <div class="col-sm-6">
                <div class="text-sm-end">
                    All rights reserved
                </div>
            </div>
        </div>
    </footer>
</main>


<!-- Include SweetAlert2 if not already -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  const productImageInput = document.getElementById('productImage');
  const previewContainer = document.getElementById('new-image-preview');
  const imgAlert = document.getElementById('imgAlert');

  // ðŸ§¨ Existing image delete
  const deleteImage = async (productId, imageIndex) => {
    try {
      const response = await fetch(`/admin/product_img_delete?id=${productId}&image=${imageIndex}`, {
        method: 'DELETE'
      });

      const data = await response.json();
      if (data) {
        const imageElem = document.querySelector(`.pro-image[data-image-index="${imageIndex}"]`);
        const closeBtn = document.querySelector(`.close-button[data-image-index="${imageIndex}"]`);
        if (imageElem) imageElem.remove();
        if (closeBtn) closeBtn.closest('.image-container').remove();
        Swal.fire('Deleted!', 'Image removed successfully.', 'success');
      }
    } catch (error) {
      console.error(error);
      Swal.fire('Error!', 'Something went wrong while deleting.', 'error');
    }
  };

  // ðŸš€ Attach delete handler for existing images
  document.addEventListener('DOMContentLoaded', () => {
    const deleteButtons = document.querySelectorAll('.close-button');
    const productId = document.getElementsByName('product-id')[0].value;

    deleteButtons.forEach(button => {
      button.addEventListener('click', (event) => {
        const imageIndex = event.target.dataset.imageIndex;
        deleteImage(productId, imageIndex);
      });
    });
  });

  // ðŸ“¸ Preview selected new images
  productImageInput.addEventListener('change', () => {
    const existingImages = document.querySelectorAll('.pro-image').length;
    const selectedFiles = productImageInput.files;
    const totalImages = existingImages + selectedFiles.length;


    if (totalImages > 5) {
      Swal.fire({
        icon: 'warning',
        title: 'Whoa there!',
        text: `You can only have 5 images max. You already got ${existingImages}.`,
      });
      //productImageInput.value = '';
      return;
    }

    // Clear old previews
    previewContainer.innerHTML = '';

    Array.from(selectedFiles).forEach((file, index) => {
      const reader = new FileReader();
      reader.onload = function (e) {
        const previewDiv = document.createElement('div');
        previewDiv.classList.add('image-container');

        const badge = document.createElement('div');
        badge.classList.add('badge', 'rounded-pill', 'alert-danger');

        const closeBtn = document.createElement('p');
        closeBtn.innerHTML = 'Ã—';
        closeBtn.classList.add('close-button');
        closeBtn.title = 'Remove this image';
        closeBtn.style.cursor = 'pointer';

        closeBtn.addEventListener('click', () => {
          previewDiv.remove();
          Swal.fire('Removed!', 'Preview image deleted.', 'info');
        });

        const img = document.createElement('img');
        img.src = e.target.result;
        img.style.width = '80px';
        img.classList.add('m-2', 'pro-image');

        badge.appendChild(closeBtn);
        previewDiv.appendChild(badge);
        previewDiv.appendChild(img);

        previewContainer.appendChild(previewDiv);
      };
      reader.readAsDataURL(file);
    });
  });
</script>


<script>
  function Validation() {
    const errors = []; // Store errors

    const fileInput = document.getElementById('file-1');
    const newSelected = fileInput?.files?.length || 0;
    const existingImages = document.querySelectorAll('.pro-image').length;
    const totalImages = newSelected + existingImages;

    const productName = document.getElementById("productName").value.trim();
    const longdescription = document.getElementById("longdescription").value.trim();
    const Qty = document.getElementById("Qty").value.trim();
    const price = document.getElementById("price").value.trim();

    // Regex checks
    const productNameRegex = /^.{3,}$/; // At least 3 chars
    const number = /^[1-9]\d*$/;
    const descriptionRegex = /^.{1,100}$/;

    // Error element refs
    const productNameAlert = document.getElementById("productNameAlert");
    const qtyAlert = document.getElementById("qtyAlert");
    const priceAlert = document.getElementById("priceAlert");
    const longAlert = document.getElementById("longAlert");
    const imgAlert = document.getElementById("imgAlert");

    // Clear all alerts first
    productNameAlert.innerHTML = "";
    qtyAlert.innerHTML = "";
    priceAlert.innerHTML = "";
    longAlert.innerHTML = "";
    imgAlert.innerHTML = "";

    // Validations
    if (!productName.match(productNameRegex)) {
      errors.push({ field: productNameAlert, msg: "Name must be at least 3 characters" });
    }

    if (!Qty.match(number)) {
      errors.push({ field: qtyAlert, msg: "Enter a valid quantity greater than 0" });
    }

    if (!price.match(number)) {
      errors.push({ field: priceAlert, msg: "Enter a valid price greater than 0" });
    }

    if (!longdescription.match(descriptionRegex)) {
      errors.push({ field: longAlert, msg: "Description must be 1 to 100 characters" });
    }

    if (totalImages < 3) {
        errors.push({
        field: imgAlert,
        msg: `Please make sure you have at least 3 images. Currently, total is ${totalImages}.`,
    });
}

    if (errors.length > 0) {
      errors.forEach(error => {
        error.field.innerHTML = error.msg;
      });

      // Optional Sweet Alert for overview error
      Swal.fire({
        icon: 'warning',
        title: 'Oops!',
        text: 'Please fix the errors before submitting the form.',
      });

      return false; // Prevent form submission
    }

    return true; // All validations passed
  }
</script>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    ////////////back
    $(document).ready(function () {
        $('#backbutton').click(function (e) {
            e.preventDefault();


            Swal.fire({
                title: "Leave the page?",
                text: "The Data will not be saved",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#088178",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/admin/product";

                }
            });


        });
    });
</script>

<style>
    .close-button {
  text-decoration: none;
  cursor: pointer;
}

  .image-container {
    position: relative;
    display: inline-block;
  }
</style>